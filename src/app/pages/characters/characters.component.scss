.characters-container {
  min-height: 100vh;
  background-image: url('../../assets/images/background.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  position: relative;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);
  z-index: var(--z-overlay-bg);
}

main {
  position: relative;
  z-index: var(--z-content);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding-top: 5vh;

  h1, h2 {
    color: var(--color-white);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    animation: fadeInUp 0.8s ease-out forwards;
  }

  h1 {
    font-size: 4rem;
    margin-bottom: 1rem;
  }

  h2 {
    font-size: 2rem;
    color: var(--color-light);
    margin-bottom: 1.5rem;
    font-weight: bold;
  }
}

.content-wrapper {
  width: 100%;
  padding: 0 20px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  
  &.sidebar-open {
    margin-left: 280px;
    width: calc(100% - 280px);
  }
}

.filter-sidebar {
  position: fixed;
  left: -280px;
  top: 50%;
  transform: translateY(-50%);
  width: 280px;
  background: linear-gradient(135deg, var(--color-background-dark), var(--color-background));
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  padding: 20px;
  z-index: 100;
  border-radius: 0 15px 15px 0;
  backdrop-filter: blur(10px);
  border: 1px solid var(--color-border);

  .filter-section {
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &.open {
    left: 0;
    
    .filter-section {
      opacity: 1;
      visibility: visible;
    }
  }

  .toggle-btn {
    position: absolute;
    right: -30px;
    top: 50%;
    transform: translateY(-50%);
    background: linear-gradient(135deg, var(--color-background-dark), var(--color-background));
    border: 1px solid var(--color-border);
    border-left: none;
    padding: 10px;
    cursor: pointer;
    border-radius: 0 8px 8px 0;
    color: white;
    height: 60px;
    width: 30px;
    backdrop-filter: blur(10px);
    
    &:hover {
      background: var(--color-accent);
      color: var(--color-white);
    }

    i {
      font-size: 16px;
    }
  }
}

.filter-section {
  max-height: 600px;
  overflow-y: auto;
  padding-right: 10px;

  &::-webkit-scrollbar {
    width: 5px;
  }

  &::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 5px;
  }
}

.filter-group {
  margin-bottom: 25px;

  .filter-title {
    color: #fff;
    font-size: 1.1em;
    margin-bottom: 15px;
    padding-bottom: 5px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }

  .filter-options {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
}

.filter-option {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 8px 12px;
  cursor: pointer;
  border-radius: 8px;
  transition: all 0.2s ease;
  color: #fff;

  &:hover {
    background: rgba(255, 255, 255, 0.1);
  }

  img {
    width: 24px;
    height: 24px;
    
    &[src*="others/sword.webp"],
    &[src*="others/claymore.webp"],
    &[src*="others/catalyst.webp"],
    &[src*="others/bow.webp"],
    &[src*="others/polearm.webp"] {
      filter: brightness(2.5);
    }
  }

  .stars {
    color: var(--color-star);
    font-size: 0.9em;
  }

  // Element-specific colors
  &[data-element="Pyro"] {
    &:hover, &.active {
      background: rgba(255, 102, 71, 0.2);
      border-color: #FF6647;
    }
  }

  &[data-element="Hydro"] {
    &:hover, &.active {
      background: rgba(51, 170, 255, 0.2);
      border-color: #33AAFF;
    }
  }

  &[data-element="Anemo"] {
    &:hover, &.active {
      background: rgba(116, 216, 158, 0.2);
      border-color: #74D89E;
    }
  }

  &[data-element="Electro"] {
    &:hover, &.active {
      background: rgba(178, 127, 255, 0.2);
      border-color: #B27FFF;
    }
  }

  &[data-element="Dendro"] {
    &:hover, &.active {
      background: rgba(119, 221, 78, 0.2);
      border-color: #77DD4E;
    }
  }

  &[data-element="Cryo"] {
    &:hover, &.active {
      background: rgba(153, 238, 255, 0.2);
      border-color: #99EEFF;
    }
  }

  &[data-element="Geo"] {
    &:hover, &.active {
      background: rgba(255, 180, 51, 0.2);
      border-color: #FFB433;
    }
  }

  // Weapon hover/active state
  &[data-weapon] {
    &:hover, &.active {
      background: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.5);
    }
  }

  // Rarity-specific colors
  &[data-rarity="4"] {
    &:hover, &.active {
      background: rgba(177, 101, 255, 0.2);
      border-color: #B165FF;
      .rarity-stars {
        color: #B165FF;
      }
    }
  }

  &[data-rarity="5"] {
    &:hover, &.active {
      background: rgba(255, 183, 22, 0.2);
      border-color: #FFB716;
      .rarity-stars {
        color: #FFB716;
      }
    }
  }
}

.characters-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 20px;
  padding: 20px;
  width: 100%;
  
  &.loading {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.character-card {
  position: relative;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s, box-shadow 0.2s;
  cursor: pointer;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .character-image {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(128, 128, 128, 0.7);
      z-index: 2;
      opacity: 0;
      pointer-events: none;
    }

    &[data-rarity="4"] {
      background: linear-gradient(to bottom right, #4e3770, #915fc8);
    }
    
    &[data-rarity="5"] {
      background: linear-gradient(to bottom right, #7d6138, #ffb716);
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      position: relative;
      z-index: 1;
    }

    .rarity {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 15px 5px 5px;
      background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
      z-index: 2;
      text-align: center;

      span {
        color: #fff;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
      }
    }
  }

  &::before {
    content: 'ðŸ”’';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1);
    font-size: 2rem;
    z-index: 3;
    color: white;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    opacity: 0;
    pointer-events: none;
  }

  // Default state for unowned characters
  &:not(.owned) {
    .character-image::after {
      opacity: 1;
    }

    &::before {
      opacity: 1;
    }

    .character-info {
      h3, .constellation-selector {
        opacity: 0.7;
        transform: scale(0.98);
      }
    }

    .constellation-selector {
      pointer-events: none;
    }
  }

  // Animation states
  &.toggling {
    &.to-owned {
      &::before {
        animation: unlockAnimation 0.4s ease-in-out forwards;
      }
      .character-image::after {
        animation: fadeOut 0.4s ease-in-out forwards;
      }
      .character-info {
        h3, .constellation-selector {
          animation: textFadeIn 0.4s ease-in-out forwards;
        }
      }
    }

    &.to-locked {
      &::before {
        animation: lockAnimation 0.4s ease-in-out forwards;
      }
      .character-image::after {
        animation: fadeIn 0.4s ease-in-out forwards;
      }
      .character-info {
        h3, .constellation-selector {
          animation: textFadeOut 0.4s ease-in-out forwards;
        }
      }
    }
  }

  .character-info {
    padding: 12px;
    text-align: center;
    background: #ffffff;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    transition: opacity 0.4s ease-in-out;

    h3 {
      margin: 0;
      font-size: 1rem;
      color: var(--color-accent);
      font-weight: bold;
      transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
    }

    .constellation-selector {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 8px;
      padding: 0 8px;
      width: 100%;
      height: 32px;
      background: var(--color-background-light);
      transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;

      .cons-btn {
        width: 28px;
        height: 28px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid var(--color-accent);
        color: var(--color-accent);
        background: transparent;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1.2rem;
        padding: 0;
        transition: all 0.2s;

        &:hover {
          background: var(--color-accent);
          color: white;
        }

        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
        }
      }

      .cons-level {
        color: var(--color-accent);
        font-size: 1rem;
        font-weight: 500;

        &.bounce {
          animation: bounceNumber 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
        }
      }
    }
  }

  .owned-indicator {
    position: absolute;
    top: 8px;
    right: 8px;
    color: #4CAF50;
  }
}

.rarity {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 5px;
  background: rgba(0, 0, 0, 0.7);
  color: gold;
  text-align: center;
  font-size: 0.9rem;
}

.rarity-stars {
  font-size: 1.2em;
  letter-spacing: 2px;
  
  &.four-star {
    color: #A256E1; // Purple for 4-star
  }
  
  &.five-star {
    color: #FFB13F; // Gold for 5-star
  }
}

.action-buttons {
  position: fixed;
  bottom: 20px;
  right: 20px;
  display: flex;
  gap: 10px;
  z-index: 100;

  button {
    padding: 12px 24px;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;

    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }
  }

  .save-btn {
    background: var(--color-accent);
    color: white;
    border: none;

    &:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
  }

  .discard-btn {
    background: white;
    color: var(--color-accent);
    border: 1px solid var(--color-border);

    &:hover:not(:disabled) {
      background: #f5f5f5;
    }
  }
}

@keyframes lockAnimation {
  0% {
    transform: translate(-50%, -50%) scale(0) rotate(-20deg);
    opacity: 0;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2) rotate(-10deg);
    opacity: 0.5;
  }
  100% {
    transform: translate(-50%, -50%) scale(1) rotate(0);
    opacity: 1;
  }
}

@keyframes unlockAnimation {
  0% {
    transform: translate(-50%, -50%) scale(1) rotate(0);
    opacity: 1;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2) rotate(10deg);
    opacity: 0.5;
  }
  100% {
    transform: translate(-50%, -50%) scale(0) rotate(20deg);
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes textFadeIn {
  0% {
    opacity: 0.7;
    transform: scale(0.98);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes textFadeOut {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0.7;
    transform: scale(0.98);
  }
}

@keyframes bounceNumber {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

.characters-section {
  position: relative;
  width: 100%;
}

.loading-spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,  100%);
  z-index: 2;
  width: 60px;
  margin: 0 auto;
}

.spinning-logo {
  width: 60px;
  height: 60px;
  animation: spin 2s linear infinite;
  filter: brightness(0) invert(1);
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.characters-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 20px;
  padding: 20px;
  width: 100%;
  
  &.loading {
    opacity: 0;
  }
}

